Class {
	#name : #ReHabPlantHarvester,
	#superclass : #CMAgent,
	#traits : 'TCMLocated',
	#classTraits : 'TCMLocated classTrait',
	#instVars : [
		'label',
		'harvest',
		'myClan'
	],
	#classVars : [
		'CurrentId'
	],
	#classInstVars : [
		'maxHarvest'
	],
	#category : #'ReHab-Model'
}

{ #category : #image }
ReHabPlantHarvester class >> defaultImage [
"defaultImage adapted for Cormas versions previous to 2010. Returns a copy of the POV image stored in the povDict of the class at a specifed symbol key"
^((self povDict keys includes: #ReHabPlantHarvester) ifTrue:[self povDict at:#ReHabPlantHarvester] ifFalse:[super defaultImage]) copy
]

{ #category : #accessing }
ReHabPlantHarvester class >> entityName [

	^ 'PlantHarvester'
]

{ #category : #'default value' }
ReHabPlantHarvester class >> harvest_default [
	"Return the default value of harvest attribute"
	^0
]

{ #category : #accessing }
ReHabPlantHarvester class >> imageHighlight [

	^self image isStroked: false
]

{ #category : #'default value' }
ReHabPlantHarvester class >> label_default [
	"Return the default value of label attribute"
	^'toto'
]

{ #category : #accessing }
ReHabPlantHarvester class >> maxHarvest [
	maxHarvest ifNil: [maxHarvest := 2].
	^maxHarvest
]

{ #category : #accessing }
ReHabPlantHarvester class >> maxHarvest: anObject [
	maxHarvest := anObject
]

{ #category : #'default value' }
ReHabPlantHarvester class >> maxHarvest_default [
	"Return the default value of maxHarvest attribute"
	^2
]

{ #category : #'default value' }
ReHabPlantHarvester class >> myClan_default [
	"Return the default value of myClan attribute"
	^nil
]

{ #category : #testing }
ReHabPlantHarvester >> atHome [

	^self patch isNil or: [(self patch myCSE: ReHabZone) isNil]
]

{ #category : #moving }
ReHabPlantHarvester >> goBackHome [

	self myClan bringBackHomeMember: self
]

{ #category : #accessing }
ReHabPlantHarvester >> harvest [
	"Getter accessor with default value = 0 "
	harvest isNil ifTrue:[harvest := 0].

	^harvest
]

{ #category : #accessing }
ReHabPlantHarvester >> harvest: anObject [
	"Setter accessor of attribute harvest.
	!! This method was automatically generated by Cormas !!  "
	harvest = anObject ifTrue:[^nil].   "for optimization"
	harvest := anObject.
	self changed
]

{ #category : #info }
ReHabPlantHarvester >> info_harvest [

	^(self myClan isNil or: [self myClan highlight not])
		ifTrue: ['']
		ifFalse: [self harvest printString]
]

{ #category : #accessing }
ReHabPlantHarvester >> label [
	"Getter accessor with default value = 'toto' "
	label isNil ifTrue:[label := 'toto'].

	^label
]

{ #category : #accessing }
ReHabPlantHarvester >> label: anObject [
	label := anObject
]

{ #category : #accessing }
ReHabPlantHarvester >> myClan [

	^ myClan
]

{ #category : #accessing }
ReHabPlantHarvester >> myClan: anObject [
	myClan := anObject
]

{ #category : #pov }
ReHabPlantHarvester >> pov [

	^((self myClan isNil or: [self myClan highlight not]) ifTrue: [self class name] ifFalse: [self povHarvest])
]

{ #category : #pov }
ReHabPlantHarvester >> povColor [
	self myClan ifNil: [ ^ self class name ].
	^ self myClan color ifNil: [ self colorOfNumber: self myClan id ]
		ifNotNil: [ self myClan color ]
]

{ #category : #pov }
ReHabPlantHarvester >> povHarvest [

	^('harvest' , self harvest printString) asSymbol
]
